
BUILDING THE CODE

(simplified procedure, 1/28/14)

You'll need to build a couple of external package first, prior to building this code
(maybe I'll put the build of these into the main build someday....not today though).

The external stuff is in the "packages" folder in this folder, including lapack,
cminpack, and a self-contained python build for Linux.  Both lapack and cminpack use CMake to build.
We'll do the build and install using a couple of scripts that set things up correctly.  

cd packages/dist
./build_lapack
./build_cminpack

If on a 64-bit Linux system, you might save some headaches by installing the local python
build (rather than futzing with the system python libs that might be too old to help you).
If you want to try, do

bash Anaconda-2.0.1-Linux-x86_64.sh

inside the packages/dist folder and answer all the prompts.

Finally, ensure that "TOP" is defined in ${UQ_DIR}/GNUmakefile to point to the folder containing 
CCSE's BoxLib and Combustion git repositories, and then type "make" in ${UQ_DIR}.  Note, depending
on your system, the LAPACK lib will install in packages/lib, or packages/lib64

If the latter, uncomment the line in GNUmakefile that adds the relevant folder to the lib
search path, and then "make".  The build will create a shared library that is built directly
in the "pyemcee" folder, and a .py file that is copied there.


--------------------------------------------------------------------------------------------------

RUNNING THE CODE VIA EMCEE:

On Linux, you'll need to add the library install folders to your LD_LIBRARY_PATH:

        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${UQ_DIR}/packages/lib:${UQ_DIR}/packages/lib64

For mac and Linux, add the UQ_DIR to PYTHONPATH

        export PYTHONPATH=$PYTHONPATH:${UQ_DIR}

To run, you need to install emcee:

        pip install emcee

Then, do

        python pyemcee/UqBox.py inputs_0D_Davis

To make a triangle plot with one of the output files, you'll need to install the triangle plotting code:

        pip install triangle_plot

Once this complete, you should be able to run:

        python pyemcee/UqPlotAll.py Results_1000


--------------------------------------------------------------------------------------------------

On edison, I managed to get the impMC.py script to run in parallel by doing the following:

At the edison command prompt, run the following to get a couple python modules built in your local area that you'll need:

easy_install --install-dir ~/lib/python dill
easy_install --install-dir ~/lib/python klepto

Put the following in your ~/.bash_profile.ext file:

module swap PrgEnv-intel PrgEnv-gnu
module load swig
module load python
module load mpi4py
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${PYTHON_DIR}/lib:${HOME}/src/CCSE/UQ/src/packages/lib:${HOME}/src/CCSE/UQ/src/packages/lib64
export PYTHONPATH=${HOME}/lib/python

Get an interactive batch job running with:

qsub -I -q debug -l mppwidth=48


Once it drops in, do the following:
cd $PBS_O_WORKDIR
module load numpy
module load scipy
module load mpi4py

Then, run the sampler in parallel with aprun:

aprun -n 8 python pyemcee/impMC.py inputs_Matti maxStep=2000 outFilePeriod=200 outFilePrefix="TEST" stage=1 neff=9



To run a standalone executable, do the following
cd $PBS_O_WORKDIR
module unload xt-shmem
export OMP_NUM_THREADS=6
aprun -n 8 -N 4 -d 6 -S 2 -ss ./minimizeEnsemble2d.Linux.g++.gfortran.MPI.OMP.ex inputs_Matti

....this will run 8 MPI tasks with 6 threads each, using 4 MPI tasks per NUMA domain.

Update 10Sep15:
I needed to do:
module unload darshan
to get some of the extra packages to build - errors about needing fPIC on the darshan libraries linked in by the
default wrappers

A liberal sprinkling of -dynamic around link lines also may be necessary; I updated the cminpack and lapacke
build scripts to add this
